@using TrainingPlanner.Helpers
@using System
@model TrainingPlanner.Test

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id=@(Model.Slika.Count > 0 ? "contentImg" : "content")>
    @using (Html.BeginForm("IzmijeniTest", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.ValidationSummary(true)
        @Html.HiddenFor(x => x.TestId)
        @Html.HiddenFor(x => x.ClanId)

    <div id=@(Model.Slika.Count > 0 ? "inputAreaImgs" : "inputArea") style="float: left;">
        <h2 class="green">Izmjeni test</h2>
        <div>
            <div class="marginInputBottom">@Html.Label("Naziv", new { @class = "smallFont" })</div>
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name, String.Empty, new { @class = "error" })
        </div>
        <br />
        <hr />

        <div>
            <div class="marginText">@Html.Label("Opis testa - Funkcionalne sposobnosti *", new { @class = "smallFont" })</div>
            @Html.TextAreaFor(model => model.FunkcionalneSposobnosti)
            @Html.ValidationMessageFor(model => model.FunkcionalneSposobnosti, String.Empty, new { @class = "error" })
        </div>
        <br />
        <div>
                <div class="marginInputBottom">@Html.Label("* Rezultat", new { @class = "smallFont" })</div>
                
                    <table class="responstableTrening">
                        <tr class="smallFont">
                            <td class="green">Datum</td>
                            <td class="green">Rezultat</td>
                            <td colspan="2">@Html.ActionLink("Dodaj funkcionalni rezultat", "DodajFunkcionalniRezultat", "Home", new { id = Model.TestId }, new { @class = "marginHeadlineTop marginTextBottom button_example", @style="-moz-transform: scale(0.75);" })</td>
                        </tr>
                @foreach (var item in Model.FunkcionalniRezultatiTest.ToList())
                {
                        <tr>
                            <td align="center">@item.Datum.Value.ToShortDateString()</td>
                            <td align="center">@item.Rezultat</td>
                            <td align="center">@Html.ActionLink("Izmjeni", "IzmijeniFunkcionalniRezultat", "Home", new { id = item.FunkcionalniRezultatiTestId }, new { @class = "button_example_small", @style="-moz-transform: scale(0.75);" })</td>
                            <td align="center">@Html.ActionLink("Izbriši", "IzbrisiFunkcionalniRezultat", "Home", new { id = item.FunkcionalniRezultatiTestId }, new { @class = "button_example_small", @style="-moz-transform: scale(0.75);", onclick = "return confirm('Jeste li sigurni da zelite izbrisati rezultat?');" })</td>
                        </tr>
                }
                   </table>
            </div>
        <br />
        <hr />

        <div>
            <div class="marginText">@Html.Label("Opis testa - Motoričke sposobnosti **", new { @class = "smallFont" })</div>
            @Html.TextAreaFor(model => model.MotorickeSposobnosti)
            @Html.ValidationMessageFor(model => model.MotorickeSposobnosti, String.Empty, new { @class = "error" })
        </div>
        <br />
        <div>
                <div class="marginInputBottom">@Html.Label("** Rezultat", new { @class = "smallFont" })</div>
                
                    <table class="responstableTrening">
                        <tr class="smallFont">
                            <td class="green">Datum</td>
                            <td class="green">Rezultat</td>
                            <td colspan="2">@Html.ActionLink("Dodaj Motoricki rezultat", "DodajMotorickiRezultat", "Home", new { id = Model.TestId }, new { @class = "marginHeadlineTop marginTextBottom button_example", @style="-moz-transform: scale(0.75);" })</td>
                        </tr>
                @foreach (var item in Model.MotorickiRezultatiTest.ToList())
                {
                        <tr>
                            <td align="center">@item.Datum.Value.ToShortDateString()</td>
                            <td align="center">@item.Rezultat</td>
                            <td align="center">@Html.ActionLink("Izmjeni", "IzmijeniMotorickiRezultat", "Home", new { id = item.MotorickiRezultatiTestId }, new { @class = "button_example_small", @style="-moz-transform: scale(0.75);" })</td>
                            <td align="center">@Html.ActionLink("Izbriši", "IzbrisiMotorickiRezultat", "Home", new { id = item.MotorickiRezultatiTestId }, new { @class = "button_example_small", @style="-moz-transform: scale(0.75);", onclick = "return confirm('Jeste li sigurni da zelite izbrisati rezultat?');" })</td>
                        </tr>
                }
                   </table>
            </div>
        <br />
        <hr />
        @if (Model.Slika.Count == 0)
        {
            <div class="marginText">
                @Html.Label("Dodaj datoteku", new { @class = "smallFont" })
                <div>
                    <input type="file" name="slike" value="" multiple="multiple" class="marginInputTop" />
                </div>
            </div>
        }

        <div class="marginHeadlineTop marginTextBottom">
            <input type="submit" value="Spremi izmjene" class="button_example" />
        </div>

        @Html.ActionLink("Popis testova", "Test", new { id = Model.ClanId }, new { @class = "marginHeadlineTop marginTextBottom button_example" })
    </div>

        if (Model.Slika.Count > 0)
        {
            <div id="inputAreaImages" style="float: left;">
                <h2 style="padding-left:15px" class="green">Slike testova</h2>
                @foreach (var item in Model.Slika)
                {
                    <div style="float: left; display: block; clear: right;" class="marginHeadline">
                         @if(MIMEFileTypeDetector.GetMIMEType(item.SlikaIme) == "image/jpeg")
                                {
                                    <div><a href="~/Content/VelikeSlike/@item.SlikaIme" target="_blank"><img class="marginLeft" src="@Url.Content(String.Format("~/Content/VelikeSlike/{0}", item.SlikaIme))" /></a></div>
                                    @Html.ActionLink("Izbriši sliku", "IzbrisiSliku", "Home", new { id = Model.TestId, slika = item.SlikaId }, new { @class = "marginLeft marginInputTop marginTextBottom button_example" })
                                }
                            else
                                {
                                   <div><a href="~/Content/VelikeSlike/@item.SlikaIme" target="_blank"><img class="marginLeft" src="@Url.Content("~/Content/VelikeSlike/texticon.jpg")" /></a></div> 
                                   @Html.ActionLink("Izbriši datoteku", "IzbrisiSliku", "Home", new { id = Model.TestId, slika = item.SlikaId }, new { @class = "marginLeft marginInputTop marginTextBottom button_example" })
                                }                       
                    </div>
                }
                <div class="marginText" style="clear: both;">
                    @Html.Label("Dodaj datoteku", new { @class = "smallFont" })
                    <div>
                        <input type="file" name="slike" value="" multiple="multiple" class="marginInputTop" />
                    </div>
                </div>
            </div>
        }
    }
</div>